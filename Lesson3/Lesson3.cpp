// Lesson3.cpp : Переменные и типы данных

#include <iostream>  // потоковые операции
#include <iomanip>   // манипуляторы потока
#include <string>

int main() {
    char hr = (char)205;  // horizontal line
    std::string str;
    //std::cin >> str;
    std::getline(std::cin, str);
    std::cout << str + std::to_string(2) << std::endl
        << std::stoi("10") << std::endl;

    std::cout
        << "Name: \"The warand the peace\"\n"
        << "Avtor : L.N.Tolstoj\n"
        << "Izdatelstvo : Piter\n"
        << "Pages : 500.\n"
        << std::endl   // альтернатива \n
        << (char)201   // left-top corner
        << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr << hr
        << (char)187   // right-top corner
        << std::endl
        << (char)186
        << std::setw(12) << "Pory Roku"  // setw - манипулятор ширины
        << std::setw(5) << (char)186;


    return 0;
}
/*
Расчет скорости:
Пользователь вводит 
 - расстояние между городами
 - время поездки
 = программа выводит среднюю скорость движения

Внешняя баллистика:
 - вводится скорость снаряда 
 - угол стрельбы
 = программа выводит дальность попадания
*/

int main1()
{
    int x;   // определение переменной
    x = 10;  // присваивание - перемещение данных из одного места в другое
    int y = 20;  // определение + инициализация - построение по шаблону
    // константа - присваивать нельзя, а инициализировать можно

    // ввод пользователя
    std::cout << "Enter x = ";
    std::cin >> x;

    y = x * x;  // выражение (x * x), результат этого выражения -> y
    std::cout << "x * x = " << y;

    return 0;
}

/*
Компиляция - перевод исходного кода (текста программы) в исполнимый
 код (ЕХЕ-файл)

Переменная - именованная область памяти
 - данные могут изменяться. Константа - если не могут
 - в одном месте от запуска программы
 - размер выделенной памяти остается постоянным

Тип данных - информация о:
 - размере, выделяемом для хранения данных
 - правиле преобразования (исходных данных в бинарные и обратно)
 - допустимых операциях с данными этого типа
 = о правилах преобразования
  432     101 = 5
  |||     |||
  ||1     ||1
  |10     |2 
  100     4

  Строгая типизация - ситуация, при которой запрещено результат
  одного типа поместить в переменную другого типа.
  Нестрогая типизация - с неявным преобразованием типов, например,
  целое число (int) можно поместить в переменную дробного типа (double)
  без дополнительных преобразующих операций.

  Статическая типизация - переменная не меняет тип при работе программы.
  Динамическая типизация - может поменять тип

  Инструкция (statement) - синтаксически корректная запись в
  языке программирования.

  Выражение - инструкция, имеющая результат

*/
