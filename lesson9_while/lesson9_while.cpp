#include <iostream>

int main() {
    const int TRIES_LIMIT = 3;  // максимальное кол-во попыток

    srand(time(0));  // сидирование (seed-зерно) генератора - задание начального значения
    rand(); rand();  // Эффект перемешивания - сбить линейную зависимость от времени
    int num;    // 0..10  генератор псевдослучайных чисел - все время повторяется (если не сидировать)
    int guess;  // ввод (попытка) пользователя
    int tries;  // счетчик попыток
    char yesno; // сыграть еще раз?

    do {  // начало новой игры
        num = rand() % 11;  // "загадываем" число
        tries = 0;  // первая попытка - 1, но начинаем с 0, т.к. инкремент в начале цикла
        do {
            ++tries;  // увеличиваем счетчик попыток
            std::cout << "Try " << tries << ". Guess number: ";
            std::cin >> guess;
            if (guess < num) {
                std::cout << "Geater" << std::endl;
            }
            if (guess > num) {
                std::cout << "Less" << std::endl;
            }
        } while (guess != num && tries < TRIES_LIMIT);
        // Если условие выхода комбинированное, то требуется доп. проверка за циклом
        //  -- мы не знаем по какому условию завершился цикл
        if (guess == num) {
            std::cout << "You win in " << tries << " tries! " << std::endl;
        }
        else {
            std::cout << "Tries limit exceeded" << std::endl;
        }
        // конец игры. предлагаем повторить
        std::cout << "Play again (y/n): ";
        std::cin >> yesno;
    } while (yesno == 'y');


    return 0;
}

int main3() {
    // пользователь вводит числа, программа их суммирует.
    // когда пользователь вводит 0 программа останавливается и выводит сумму
    int n, sum;
    sum = 0;                            // Начальное присваивание - перед циклом
    do {                                // Начало цикла "do-while" (с пост-условием)
        std::cout << "Enter number: ";  // | Тело цикла: вывод                <--|
        std::cin >> n;                  // |             ввод                    |
        sum += n;                       // |             суммирование            |
    } while (n != 0);                   // Цикловое условие. Если true, то цикл повторяется
    std::cout << "Sum = " << sum;       // За циклом, выполняется после его окончания
    
    std::cout << std::endl;

    // Следующая задача - разобрать сумму (sum) на цифры и вывести через пробел
    int divider = 1;  // подбираем число 10 - 100 - 1000 
    while (divider <= sum) divider *= 10;  // если в цикле одна операция, то {} не требуются
    // после цикла divider имеет форму 1000...00 и больше чем sum
                                //  на примере sum = 543, divider = 1000
    while (divider > 1) {       // Цикл "while" - с пред-условием
        divider /= 10;          // | Тело цикла - "убираем последний 0" (100)          |->  div -> 10         |-->
        int d = sum / divider;  // | делим, остается первая цифра (543/100 = 5)        |    d = 43 / 10 = 4   |
        std::cout << d << ' ';  // | выводим цифру и пробел (5  )                      |                      |
        sum -= d * divider;     // | убираем первую цифру - вычитаем "5х100" 543-500 = 43   43 - 4x10 = 3  ---|
    }                           // 
    //   while (sum > 0)               sum   divider   d
    //                                 5400   10000
    //   divider /= 10;                        1000    
    //   int d = sum / divider;                        5  (5400 / 1000)
    //   std::cout << d << ' ';                    
    //   sum -= d * divider;           5400 - 5x1000 = 400            
    //   ----------------------
    //   divider /= 10;                400      100
    //   int d = sum / divider;                        4
    //   std::cout << d << ' ';
    //   sum -= d * divider;           400 - 4x100 = 0  -- тут цикл остановится, хотя надо вывести еще 2 цифры "0"

    std::cout << std::endl;

    return 0;
}

int main2() {
    // високосный год
    // пользователь вводит год, программа выводит високосный ли он
    int year;
    std::cout << "Enter year: ";
    std::cin >> year;
    /*
    if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
        std::cout << "Leap";
    }
    else {
        std::cout << "Not Leap";
    }*/
    // Сколько високосных лет было от начала эпохи до данного года?
    int leaps = year / 4 - year / 100 + year / 400;
    // сколько дней от начала эпохи до начала данного года?
    int days = year * 365 + leaps;

    std::cout << days;

    return 0;
}

int main1()
{
    // точка в прямоугольнике
    float x, y;  // ввод пользователя - точка

    std::cout << "Enter x,y: ";
    std::cin >> x >> y;

    // Предполагаем, что прямоугольник  (-4,-4) -- (4, 1)
    // точка внутри прямоугольника если: введенный х в пределах (-4..4), 
    //  у - (-4..1). Особый вопрос равенства (х==-4) - лежит на грани

    if (-4 < x && x < 4 
     && -4 < y && y < 1) 
    {
        std::cout << "Inside";
    }
    else {
        std::cout << "Outside";
    }

    return 0;
}

/*
Условные циклы
Обеспечивают повторное выполнение кода пока выполняется некоторое условие

Разбить число 543 на цифры. Как получить "5"?
Надо 543 / 100.
Как найти 100? (Это зависит от кол-ва цифр в числе)?
Постоянно добавляем "0" к числу до тех пор пока оно не превысит данное число
543  1  10  100  1000 (больше чем 543)
Но потом убрать последний "0"

Проверяем 87932:  1-10-100-1000-10000-100000
*/
