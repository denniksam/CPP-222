#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}
/*
    Работа с Git. Продолжение
    Новая папка с проектом
     git init - инициализация репозитория
  !! создаем .gitignore (средствами Студии)      | сначала gitignore
     добавляем файлы для комита ( git add ./ )   | потом add
     создаем комит ( git commit -m "project created" )

     удаленный (remote) репозиторий - публикуем

     Задача: исключить файл secret.cpp из публикуемых
     git add ./   - добавить все файлы - secret.cpp тоже добавляется
     git rm --cached secret.cpp   - исключаем secret.cpp из подготовленных
     добавляем имя файла в игнор (.gitignore), можно ПКМ-игнорировать элемент
     (при этом меняется .gitignore, нужно заново подготовить изменения)
     git add ./
     git commit -m "secret removed"
     git push
*/
/*
                          Схемы выполнения кода
    исходный код (текст) ....................... машинный (исполнимый) код
    
    компиляторы (языки компилируемого типа)
    на примере С++   текст -- объектный код  -- машинный код
                         компиляция       трансляция(сборка, линковка)
                          --- грубо: это все компиляция ---

    трансляторы (платформные языки)
    Java, Kotlin, C#, VBA
    текст -- промежуточный код     --- Платформа ---> машинный код

    интерпретаторы (REPL Read-Evaluate-Print-Loop)
    Python, JavaScript, PHP, DOS
    исходный код не изменяется, воспринимается как набор команд и
    выполняется "построчно" каждый раз компилируя "на лету" каждую инструкцию
*/