#include <iostream>
#include <iomanip>

int main()
{
    int arr2[4][3];   // описание массива 4х3
    arr2[1][0] = 21;
    std::string arr[] = {"str1", "str2"};
    std::cout << arr[0]; return 1;
    int i, j;
    for (i = 0; i < 4; ++i) {
        for (j = 0; j < 3; ++j) {  // i=1, j=2 => (1+1)*10 + (2+1)
           arr2[i][j] = (i+1)*10 + (j+1);
        }
    }

    for (i = 0; i < 4; ++i) {
        for (j = 0; j < 3; ++j) {
            std::cout << arr2[i][j] << " ";
        }
        std::cout << "\n";
    }

    std::cout << "-----------------------------------\n";

    // Переворот (транспонирование) : строки <-> столбцы
    // 11 21 31 41
    // 12 22 32 42
    // 13 23 33 43
    // задача: вывести в таком виде (не пересчитывать)
     for (j = 0; j < 3; ++j) {    // НЕ рекомендуется
        for (i = 0; i < 4; ++i) { //  - менять пределы для i, j
            std::cout             //    (i: 0..3, j: 0..4)
                << arr2[i][j]     //  - менять индексы местами
                << " ";           //    arr2[j][i]
        }                         // 
        std::cout << "\n";        // 
     }

     // Треугольная матрица: сформировать следующий массив:
     // 11 12 13    
     // 0  22 23    первая цифра <= второй
     // 0  0  33    
     // 0  0  0     

     std::cout << "-----------------------------------\n";

     for (i = 0; i < 4; ++i) {
         for (j = 0; j < 3; ++j) {  
             arr2[i][j] = 
                 (i > j)
                 ? 0
                 : (i + 1) * 10 + (j + 1);
         }
     }

     for (i = 0; i < 4; ++i) {
         for (j = 0; j < 3; ++j) {
             std::cout << std::setw(2) << arr2[i][j] << " ";
         }
         std::cout << "\n";
     }

     // "Итого" - под каждым столбиком вывести сумму его значений
     // 11  12  13    
     // 21  22  23    
     // 31  32  33    
     // 41  42  43    
     // ----------
     // 104 108 112 

     std::cout << "----------\n";
     int col_sum[3];  // суммы по колонкам (столбикам)
     for (j = 0; j < 3; ++j) {
         col_sum[j] = 0;
         for (i = 0; i < 4; ++i) {
             col_sum[j] += arr2[i][j];
         }
         std::cout << col_sum[j] << ' ';
     }

     // "Среднее" - в каждой строке вывести среднее ее значений
     // 11  12  13 | 12  
     // 21  22  23 | 22  
     // 31  32  33 | 32  
     // 41  42  43 | 42  
     // ----------
     // 104 108 112 
     double row_avg[4];  // среднее по строке ! тип double
     for (i = 0; i < 4; ++i) {
         row_avg[i] = 0;
         for (j = 0; j < 3; ++j) {
             row_avg[i] += arr2[i][j];
         }
         row_avg[i] /= 3.0;  // усредняем - делим на кол-во чисел
     }
     // полный вывод
     std::cout << "\n-----------------------------------\n";
     for (i = 0; i < 4; ++i) {
         for (j = 0; j < 3; ++j) {
             std::cout << std::setw(2) << arr2[i][j] << ' ';
         }
         std::cout << "| " << row_avg[i] << std::endl;
     }
     std::cout << "----------\n";
     for (j = 0; j < 3; ++j) {
         std::cout << col_sum[j] << ' ';
     }
     std::cout << "\n-----------------------------------\n";
}

/*
    Двумерные массивы
    - массивы из массивов
       [ [][][] ][ [][][] ][ [][][] ][ [][][] ]
       хорошая аналогия - поезд: №вагона-№места
    - таблица (матрица)
     i j  0   1   2 
     0  [11][12][13]
     1  [21][22][23]
     2  [31][32][33]
     3  [41][42][43]
        элемент: №строки-№столбца

*/